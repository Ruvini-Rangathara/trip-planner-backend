generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  extensions = [pgcrypto]
}

enum TravelType {
  LEISURE
  ADVENTURE
  FAMILY
  CULTURAL
}

enum ClimatePreference {
  WARM
  COOL
  AVOID_RAIN
  NO_PREFERENCE
}

enum TripStatus {
  PLANNED
  ONGOING
  COMPLETED
}

enum AlertType {
  DUE_DATE
  WEATHER
  SUGGESTION
}

model User {
  id                String             @id @default(uuid())
  name              String
  email             String             @unique
  password          String
  travelType        TravelType?
  climatePreference ClimatePreference?
  tripPlans         TripPlan[]
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  deletedAt         DateTime?
}

model Area {
  id        String     @id @default(uuid())
  name      String
  district  String?
  isIndoor  Boolean    @default(false)
  latitude  Float
  longitude Float
  trips     TripArea[]
}

model TripPlan {
  id        String     @id @default(uuid())
  userId    String
  user      User       @relation(fields: [userId], references: [id])
  title     String
  status    TripStatus @default(PLANNED)
  startDate DateTime
  endDate   DateTime
  areas     TripArea[]
  alerts    Alert[]
}

model TripArea {
  id     String   @id @default(uuid())
  tripId String
  trip   TripPlan @relation(fields: [tripId], references: [id])
  areaId String
  area   Area     @relation(fields: [areaId], references: [id])
}

model Alert {
  id        String    @id @default(uuid())
  tripId    String
  trip      TripPlan  @relation(fields: [tripId], references: [id])
  type      AlertType
  message   String
  createdAt DateTime  @default(now())
}
